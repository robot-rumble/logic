version: "v1.0"
name: Logic

agent:
  machine:
    type: e1-standard-2
  containers:
    - name: main
      image: circleci/rust:1.45.2

global_job_config:
  env_vars:
    - name: S3_BUCKET_BUILD
      value: rr-build-files
    - name: S3_BUCKET_PUBLIC
      value: rr-public-assets
  secrets:
    - name: aws
  prologue:
    commands:
      - checkout
      # lftp required to use caching
      - sudo apt install -y awscli
#      - sudo apt install -y lftp
#      - cache restore rustup
#      - cache restore cargo
#  epilogue:
#    commands:
#      - cache store rustup /root/.rustup
#      - cache store cargo /root/.cargo

blocks:
  - name: lang-runners
    dependencies: []
    run:
      when: "change_in('/lang-runners/')"
    task:
      prologue:
        commands:
          - rustup target install wasm32-wasi
      jobs:
        - name: Build Javascript
          commands:
            - git submodule update --init
            # install https://wasmer.io/
            - curl https://get.wasmer.io -sSfL | sh
            - source ~/.wasmer/wasmer.sh
            # install https://github.com/wasienv/wasienv#install
            - sudo apt install -y python python-pip python-setuptools
            - pip install git+https://github.com/wasienv/wasienv
            - wasienv install-sdk latest
            # install nodejs
            - curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
            - sudo apt install -y nodejs
            # install yarn
            - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            - echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            - sudo apt update && sudo apt install yarn
            - bash build-wasm.sh --javascript
        - name: Build Python
          commands:
            - bash build-wasm.sh --python
      epilogue:
        on_pass:
          commands:
            - aws s3 sync wasm-dist/lang-runners s3://${S3_BUCKET_PUBLIC}/lang-runners
#            - cache store lang-runners target

  - name: browser-runner
    dependencies: []
    run:
      when: "change_in(['/logic/', '/env-runners/browser/'])"
    task:
      prologue:
        commands:
#          - cache restore browser-runner
          # install https://rustwasm.github.io/wasm-pack/installer/
          - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      jobs:
        - name: Build
          commands:
            - bash build-wasm.sh --browser
      epilogue:
        on_pass:
          commands:
            - aws s3 sync wasm-dist/browser-runner s3://${S3_BUCKET_BUILD}/browser-runner
#            - cache store browser-runner target

  - name: lambda-runner
    dependencies: [lang-runners]
    run:
      when: "change_in(['/logic/', '/lang-runners/', '/env-runners/native/', '/env-runners/lambda/'])"
    task:
      prologue:
        commands:
#          - cache restore lambda-runner
          - rustup target install x86_64-unknown-linux-musl
          - aws s3 sync s3://${S3_BUCKET_PUBLIC}/lang-runners wasm-dist/lang-runners
      jobs:
        - name: Build and Upload to S3
          commands:
            - S3_BUCKET=${S3_BUCKET_BUILD} FUNCTION_NAME=battle-runner bash build-lambda.sh --deploy --prod
#      epilogue:
#        on_pass:
#          commands:
#            - cache store lambda-runner target

